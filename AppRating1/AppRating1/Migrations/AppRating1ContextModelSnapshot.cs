// <auto-generated />
using AppRating1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppRating1.Migrations
{
    [DbContext(typeof(AppRating1Context))]
    partial class AppRating1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppRating1.Data.RatedEntityTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("RatedEntity");
                });

            modelBuilder.Entity("AppRating1.Data.RatingTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatedEntityId")
                        .HasColumnType("int");

                    b.Property<int>("RatingValue")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatedEntityId");

                    b.HasIndex("UserId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("AppRating1.Data.RatingViewModel", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatedEntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatedEntityTableId")
                        .HasColumnType("int");

                    b.Property<int>("RatingTableId")
                        .HasColumnType("int");

                    b.Property<int>("RatingValue")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserTableId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("RatedEntityTableId");

                    b.HasIndex("RatingTableId");

                    b.HasIndex("UserTableId");

                    b.ToTable("NameView", (string)null);
                });

            modelBuilder.Entity("AppRating1.Data.ServiceTypeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("AppRating1.Data.SuggestCommentTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatedEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RatedEntityId");

                    b.ToTable("SuggestComments");
                });

            modelBuilder.Entity("AppRating1.Data.UserTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AppRating1.Data.RatedEntityTable", b =>
                {
                    b.HasOne("AppRating1.Data.ServiceTypeTable", "ServiceType")
                        .WithMany("RatedEntity")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("AppRating1.Data.RatingTable", b =>
                {
                    b.HasOne("AppRating1.Data.RatedEntityTable", "RatedEntity")
                        .WithMany("Ratings")
                        .HasForeignKey("RatedEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppRating1.Data.UserTable", "User")
                        .WithMany("Rating")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RatedEntity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppRating1.Data.RatingViewModel", b =>
                {
                    b.HasOne("AppRating1.Data.RatedEntityTable", "RatedEntityTable")
                        .WithMany("RatingViewModels")
                        .HasForeignKey("RatedEntityTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppRating1.Data.RatingTable", "RatingTable")
                        .WithMany("RatingViewModels")
                        .HasForeignKey("RatingTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppRating1.Data.UserTable", "UserTable")
                        .WithMany("RatingViewModels")
                        .HasForeignKey("UserTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RatedEntityTable");

                    b.Navigation("RatingTable");

                    b.Navigation("UserTable");
                });

            modelBuilder.Entity("AppRating1.Data.SuggestCommentTable", b =>
                {
                    b.HasOne("AppRating1.Data.RatedEntityTable", "RatedEntity")
                        .WithMany("SuggestComments")
                        .HasForeignKey("RatedEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RatedEntity");
                });

            modelBuilder.Entity("AppRating1.Data.RatedEntityTable", b =>
                {
                    b.Navigation("RatingViewModels");

                    b.Navigation("Ratings");

                    b.Navigation("SuggestComments");
                });

            modelBuilder.Entity("AppRating1.Data.RatingTable", b =>
                {
                    b.Navigation("RatingViewModels");
                });

            modelBuilder.Entity("AppRating1.Data.ServiceTypeTable", b =>
                {
                    b.Navigation("RatedEntity");
                });

            modelBuilder.Entity("AppRating1.Data.UserTable", b =>
                {
                    b.Navigation("Rating");

                    b.Navigation("RatingViewModels");
                });
#pragma warning restore 612, 618
        }
    }
}
